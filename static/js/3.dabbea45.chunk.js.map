{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/NewMessage/NewMessage.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/NewMessage/NewMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","c","dialog","linkId","activeClassName","active","item","src","ava","alt","name","Message","message","maxLength30","maxLength","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","style","messageArea","Field","component","FormControl","placeholder","fieldType","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","el","id","messagesElements","messages","dialogsItem","NewMessage","values","addMessage","newMessageBody","compose"],"mappings":"4NAIIA,EAAkB,SAACC,GACnB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIZE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAMtC,OAAOM,YAAQX,EAARW,CAAyBL,K,oBChBpCM,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,6B,oBCA/FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,oBCA3GD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,YAAc,kC,kFCiBjBC,EAdI,SAACN,GAClB,OACE,qBAAKO,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASR,GAAE,mBAAcD,EAAMU,QAAUC,gBAAiBH,IAAEI,OAA5D,SACE,sBAAKL,UAAWC,IAAEK,KAAlB,UACE,qBAAKC,IAAKd,EAAMe,IAAKC,IAAI,QACxBhB,EAAMiB,a,oCCSFC,EAdG,SAAClB,GAGjB,OACE,sBAAKO,UAAWC,IAAEW,QAAlB,UACE,qBAAKL,IAAI,iFAAiFE,IAAI,QAC7FhB,EAAMmB,Y,6DCLPC,EAAcC,YAAU,IAuBfC,cAAU,CAAEC,KAAM,uBAAwBC,gBAHrC,SAACC,EAAQC,GAAT,OAClBA,EAASC,YAAM,2BAEFL,EArBQ,SAACtB,GAEtB,OACE,uBAAM4B,SAAU5B,EAAM6B,aAAtB,UACE,qBAAKtB,UAAWuB,IAAMC,YAAtB,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAcjB,KAAK,iBAAiBkB,YAAY,qBAAqBC,UAAU,WACjGC,SAAU,CAACC,IAAUlB,OAEvB,8BACE,0DCgBOmB,EA1BC,SAACvC,GAGf,IAAIwC,EAAkBxC,EAAMyC,YAAYC,QAAQC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAY3B,KAAM2B,EAAG3B,KAAkBP,OAAQkC,EAAGC,GAAI9B,IAAK6B,EAAG7B,KAA9B6B,EAAGC,OACzFC,EAAmB9C,EAAMyC,YAAYM,SAASJ,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAASzB,QAASyB,EAAGzB,SAAcyB,EAAGC,OAOlG,OACE,sBAAKtC,UAAWuB,IAAMY,QAAtB,UACE,qBAAKnC,UAAWuB,IAAMkB,YAAtB,SACGR,IAGH,sBAAKjC,UAAWuB,IAAMiB,SAAtB,UACGD,EACD,cAACG,EAAD,CAAgBrB,SAbP,SAACsB,GACdlD,EAAMmD,WAAWD,EAAOE,0B,iCCEbC,sBACblD,aAToB,SAACV,GACrB,MAAO,CACLgD,YAAahD,EAAMgD,eAOI,CAAEU,iBAC3BvD,IAFayD,CAGbd","file":"static/js/3.dabbea45.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {     \r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return  <Component {...this.props}/>  \r\n          }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__N3iWX\",\"dialog\":\"DialogItem_dialog__1qvH7\",\"active\":\"DialogItem_active__1ezh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1SGaZ\",\"dialogsItem\":\"Dialogs_dialogsItem__2lHEo\",\"messages\":\"Dialogs_messages__3Dvis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2V0yD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageArea\":\"NewMessage_messageArea__1iEGA\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport c from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={c.dialog}>\r\n      <NavLink to={`/dialogs/${props.linkId}`} activeClassName={c.active}>\r\n        <div className={c.item}>\r\n          <img src={props.ava} alt=\"ava\" />\r\n          {props.name}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport c from './Message.module.css';\r\n\r\n\r\n\r\nconst Message =   (props) => {\r\n \r\n\r\n  return (\r\n    <div className={c.message} >\r\n      <img src='https://pixelbox.ru/wp-content/uploads/2018/02/anonymous_steam_avatars-1-1.jpg' alt=\"ava\"/>\r\n      {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { maxLength, required } from '../../../utils/validator';\r\nimport { FormControl } from '../../common/FormsControls/FormsControls';\r\nimport style from './NewMessage.module.css';\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst NewMessageForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={style.messageArea}>\r\n        <Field component={FormControl}  name='newMessageBody' placeholder='Enter your message' fieldType='textarea'\r\n        validate={[required, maxLength30]} />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n\r\n    \r\n\r\n  )\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n  dispatch(reset('dialogAddMessageForm'));\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit })(NewMessageForm);","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport NewMessageForm from './NewMessage/NewMessage';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n  let dialogsElements = props.dialogsPage.dialogs.map(el => <DialogItem name={el.name} key={el.id} linkId={el.id} ava={el.ava} />);\r\n  let messagesElements = props.dialogsPage.messages.map(el => <Message message={el.message} key={el.id} />);\r\n  \r\n  let onSubmit = (values)=> {  \r\n    props.addMessage(values.newMessageBody);\r\n   }\r\n \r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItem}>\r\n        {dialogsElements}\r\n\r\n      </div>\r\n      <div className={style.messages}>\r\n        {messagesElements}\r\n        <NewMessageForm onSubmit={onSubmit}/>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { addMessage} from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessage}),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}