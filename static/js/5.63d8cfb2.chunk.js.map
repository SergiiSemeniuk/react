{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionOnCount","useState","portionNumber","setPortionNumber","leftPortion","rightPortion","setPortionAndPage","changedPortionNumber","className","style","paginator","onClick","filter","page","map","selectedPage","e","User","user","isAuth","followingInProgress","unfollow","follow","usersPage","userProfile","usersAvatar","to","id","UserPhoto","userPhoto","photos","small","followButton","FollowUnfollowButton","userInfo","userName","name","userStatus","status","Users","totalUsersCount","users","u","UsersContainer","pageNumber","props","requestUsers","this","isFetching","React","Component","compose","connect","state","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","setTotalUsersCount"],"mappings":"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","file":"static/js/5.63d8cfb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__10ktb\",\"paginator\":\"Paginator_paginator__DbS3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__30aHx\",\"userProfile\":\"Users_userProfile__XTvga\",\"userInfo\":\"Users_userInfo__mOV1S\",\"userStatus\":\"Users_userStatus__Rpr3j\",\"userName\":\"Users_userName__1M8Gg\",\"followButton\":\"Users_followButton__1eh9f\"};","import React, { useState } from 'react';\r\nimport style from './Paginator.module.css';\r\n\r\n\r\nconst Paginator = ({ totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n   const start = '<<';\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    \r\n    let portionOnCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState((currentPage + portionSize - 1) / portionSize);\r\n    let leftPortion = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortion = portionNumber * portionSize;\r\n\r\n    let setPortionAndPage = (changedPortionNumber) =>{\r\n        debugger\r\n        setPortionNumber(changedPortionNumber);\r\n        let newCurrentPage = (changedPortionNumber * portionSize) - (portionSize - 1);\r\n        onPageChanged(newCurrentPage);\r\n    }\r\n    return (\r\n        <div className={style.paginator}>\r\n            {portionNumber > 1 &&\r\n            <span>\r\n                <button onClick={() => setPortionAndPage(1)}>{start}</button> \r\n                <button onClick={() => setPortionAndPage(portionNumber - 1)} >Prev</button>\r\n                </span>\r\n            }\r\n            {pages\r\n                .filter(page => page >= leftPortion && page <= rightPortion)\r\n                .map(page => {\r\n                    return <span className={currentPage === page && style.selectedPage}\r\n                        key={page}\r\n                        onClick={(e) => { onPageChanged(page) }}>\r\n                        {page}\r\n                    </span>\r\n                })}\r\n            { portionOnCount > portionNumber &&\r\n                <button onClick={() =>setPortionAndPage(portionNumber + 1) } >Next</button>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport UserPhoto from '../common/UserPhoto/UserPhoto';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FollowUnfollowButton from '../common/Button/FollowUnfollowButton';\r\n\r\n\r\nlet User = ({ user, isAuth, followingInProgress, unfollow, follow }) => {\r\n\r\n    return (\r\n        <div className={style.usersPage} >\r\n            <div className={style.userProfile} >\r\n                <div className={style.usersAvatar}>\r\n                \r\n                    <NavLink to={`/profile/${user.id}`} >\r\n                    <UserPhoto userPhoto={user.photos.small} />                       \r\n                    </NavLink>\r\n                </div>\r\n                <div className={style.followButton}>\r\n                <FollowUnfollowButton \r\n                    isAuth={isAuth}\r\n                    followingInProgress={followingInProgress}\r\n                    unfollow={unfollow}\r\n                    follow={follow}\r\n                    user={user}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className={style.userInfo} >\r\n                <div>\r\n                    <div className={style.userName} > {user.name} </div>\r\n                    <div className={style.userStatus} > {user.status} </div>\r\n                </div>\r\n                <div>\r\n                    <div> {\"user.location.country\"} </div>\r\n                    <div> {\"user.location.city\"} </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, totalUsersCount,\r\n    pageSize, users, isAuth, followingInProgress, unfollow, follow }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                totalItemCount={totalUsersCount} pageSize={pageSize} />\r\n            <div>\r\n                {\r\n                    users.map(u => <User key={u.id} user={u} isAuth={isAuth}\r\n                        followingInProgress={followingInProgress}\r\n                        unfollow={unfollow}\r\n                        follow={follow} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setTotalUsersCount, requestUsers } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader.jsx';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount,\r\n        getCurrentPage, getIsFetching, getFollowingInProgress } from './../../redux/users-selectors';\r\nimport { getIsAuth } from './../../redux/auth-selectors';\r\n    \r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {       \r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users {...this.props} onPageChanged={this.onPageChanged} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setTotalUsersCount, requestUsers })\r\n    )(UsersContainer);\r\n\r\n"],"sourceRoot":""}